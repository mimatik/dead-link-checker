# Configuration examples for different situations
# Note: If start_url is not specified, the program will prompt for domain

# ===== INTERACTIVE MODE (no start_url) =====
# Program will prompt for domain when run
interactive_example:
  # start_url: not specified - will be prompted
  timeout: 15
  delay: 0.5
  max_depth: null
  output_dir: "reports"
  show_skipped_links: false

# ===== PRODUCTION WEBSITE (careful approach) =====
# Suitable for live websites where you don't want to overload the server
production_example:
  start_url: "https://www.myproduction-site.com"
  timeout: 15
  delay: 1.5  # Longer pause between requests
  max_depth: null
  output_dir: "reports"
  show_skipped_links: false  # Hide skipped links for cleaner output
  
  # HTTP codes that are not errors (page exists but access restricted)
  whitelist_codes: [401, 403, 429, 451, 999]
  
  # Domain-specific rules for known platforms
  domain_rules:
    linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn rate limiting"
    sg.linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn Singapore rate limiting"
    twitter.com:
      allowed_codes: [403]
      description: "Twitter access restriction"
    x.com:
      allowed_codes: [403]
      description: "X/Twitter access restriction"
    reuters.com:
      allowed_codes: [401]
      description: "Reuters access restriction"
    wsj.com:
      allowed_codes: [401]
      description: "Wall Street Journal access restriction"
    mckinsey.com:
      allowed_codes: [429]
      description: "McKinsey rate limiting"
      ignore_timeouts: true
    www3.weforum.org:
      allowed_codes: [429]
      description: "World Economic Forum rate limiting"
    businesswire.com:
      allowed_codes: [429]
      description: "Business Wire rate limiting"
    latvenergo.lv:
      allowed_codes: [451]
      description: "Latvenergo geo-blocking"

# ===== QUICK TEST (surface pages only) =====
# Suitable for quick check of main pages
quick_test:
  start_url: "https://www.mysite.com"
  timeout: 5
  delay: 0.2
  max_depth: 2  # Only 2 levels deep
  output_dir: "reports"
  show_skipped_links: true  # Show skipped links for debugging
  
  # Minimal whitelist for quick testing
  whitelist_codes: [403, 999]
  
  domain_rules:
    linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn rate limiting"
    twitter.com:
      allowed_codes: [403]
      description: "Twitter access restriction"

# ===== LOCAL DEVELOPMENT SERVER =====
# Suitable for testing on localhost
local_dev:
  start_url: "http://localhost:8000"
  timeout: 5
  delay: 0.1  # Minimal pause
  max_depth: null
  output_dir: "reports"
  show_skipped_links: true  # Show skipped links for development
  
  # Basic whitelist for local development
  whitelist_codes: [401, 403, 429, 451, 999]

# ===== STAGING ENVIRONMENT =====
# For testing on staging server
staging:
  start_url: "https://staging.mysite.com"
  timeout: 10
  delay: 0.5
  max_depth: null
  output_dir: "reports"
  show_skipped_links: false  # Hide skipped links for cleaner output
  
  whitelist_codes: [401, 403, 429, 451, 999]
  
  domain_rules:
    linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn rate limiting"
    twitter.com:
      allowed_codes: [403]
      description: "Twitter access restriction"

# ===== DEEP CRAWL (entire website) =====
# For complete scanning of entire website
deep_crawl:
  start_url: "https://www.mysite.com"
  timeout: 20
  delay: 1.0
  max_depth: null  # No limit
  output_dir: "reports"
  show_skipped_links: false  # Hide skipped links for cleaner output
  
  whitelist_codes: [401, 403, 429, 451, 999]
  
  domain_rules:
    linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn rate limiting"
    sg.linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn Singapore rate limiting"
    twitter.com:
      allowed_codes: [403]
      description: "Twitter access restriction"
    x.com:
      allowed_codes: [403]
      description: "X/Twitter access restriction"
    reuters.com:
      allowed_codes: [401]
      description: "Reuters access restriction"
    wsj.com:
      allowed_codes: [401]
      description: "Wall Street Journal access restriction"
    mckinsey.com:
      allowed_codes: [429]
      description: "McKinsey rate limiting"
      ignore_timeouts: true
    www3.weforum.org:
      allowed_codes: [429]
      description: "World Economic Forum rate limiting"
    businesswire.com:
      allowed_codes: [429]
      description: "Business Wire rate limiting"
    latvenergo.lv:
      allowed_codes: [451]
      description: "Latvenergo geo-blocking"

# ===== SLOW SERVER (high timeout) =====
# For websites that respond slowly
slow_server:
  start_url: "https://slow-site.com"
  timeout: 30
  delay: 2.0
  max_depth: null
  output_dir: "reports"
  show_skipped_links: false  # Hide skipped links for cleaner output
  
  whitelist_codes: [401, 403, 429, 451, 999]
  
  domain_rules:
    linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn rate limiting"
    mckinsey.com:
      allowed_codes: [429]
      description: "McKinsey rate limiting"
      ignore_timeouts: true

# ===== MINIMAL CONFIGURATION =====
# Basic configuration with minimal rules
minimal:
  start_url: "https://www.example.com"
  timeout: 10
  delay: 0.5
  max_depth: null
  output_dir: "reports"
  show_skipped_links: false  # Hide skipped links for minimal output
  
  # Only essential whitelist codes
  whitelist_codes: [403, 999]
  
  # Only most common domain rules
  domain_rules:
    linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn rate limiting"
    twitter.com:
      allowed_codes: [403]
      description: "Twitter access restriction"

# ===== COMPREHENSIVE CONFIGURATION =====
# Complete configuration with all available options
comprehensive:
  start_url: "https://www.example.com"
  timeout: 15
  delay: 1.0
  max_depth: null
  output_dir: "reports"
  show_skipped_links: true  # Show skipped links for comprehensive debugging
  
  # HTTP codes that are not errors (page exists but access restricted)
  whitelist_codes: [401, 403, 429, 451, 999]
  
  # Domain-specific rules for known platforms
  domain_rules:
    linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn rate limiting"
    sg.linkedin.com:
      allowed_codes: [999, 429]
      description: "LinkedIn Singapore rate limiting"
    twitter.com:
      allowed_codes: [403]
      description: "Twitter access restriction"
    x.com:
      allowed_codes: [403]
      description: "X/Twitter access restriction"
    reuters.com:
      allowed_codes: [401]
      description: "Reuters access restriction"
    wsj.com:
      allowed_codes: [401]
      description: "Wall Street Journal access restriction"
    mckinsey.com:
      allowed_codes: [429]
      description: "McKinsey rate limiting"
      ignore_timeouts: true
    www3.weforum.org:
      allowed_codes: [429]
      description: "World Economic Forum rate limiting"
    businesswire.com:
      allowed_codes: [429]
      description: "Business Wire rate limiting"
    latvenergo.lv:
      allowed_codes: [451]
      description: "Latvenergo geo-blocking"
    facebook.com:
      allowed_codes: [403]
      description: "Facebook access restriction"
    instagram.com:
      allowed_codes: [403]
      description: "Instagram access restriction"
    youtube.com:
      allowed_codes: [403]
      description: "YouTube access restriction"
    github.com:
      allowed_codes: [429]
      description: "GitHub rate limiting"
    stackoverflow.com:
      allowed_codes: [429]
      description: "Stack Overflow rate limiting"